dot && v config/bspwm/autostart.sh
dot && v config/bspwm/autostart.sh
v config/bspwm/sxhkdrc
ga config/bspwm/sxhkdrc
git status
git commit -S -m "updated"
gp
git status
git rm -rf config/mpd/database config/zsh/.histfile config/zsh/.zcompdump
git commit -S -m "updated"
gp
mpd
htop
htop
neofetch
which nvidia
syncthing
killall syncthing
syncthing
sudo apt install pfetch
btm
sudo apt install bottom
dot 
cd setup-scripts
v mint.sh
git add mint.sh
git commit -S -m "added polybar and alacritty build commands"
gp
v mint.sh
mv ~/.config/nvim ~/.config/nvim.bak
mv ~/.local/share/nvim ~/.local/share/nvim.bak\
mv ~/.local/state/nvim ~/.local/state/nvim.bak\
mv ~/.cache/nvim ~/.cache/nvim.bak
git clone --depth 1 https://github.com/AstroNvim/AstroNvim ~/.config/nvim\
nvim
nvim
mv ~/.config/nvim.bak ~/.config/nvim
cd .config/nvim
ls
v ~/.config/bspwm/sxhkdrc
sudo apt remove nvim && 
cd
sudo apt remove neovim  
sudo apt autoremove
sudo apt install neovim
v ~/.config/bspwm/sxhkdrc
killall mpd
xprop
sudo apt purge pix
sudo apt autoremove
sudo apt purge xviewer
neofetch
sudo apt purge warpinator redshift
sudo apt autoremove
sudo apt purge vim
xprop
sudo apt purge xed
xprop
sudo apt purge mintstick
xprop
sudo apt purge sticky
sudo apt autoremove
sudo apt clean
sudo apt clean --help
sudo apt-get clean
sudo apt-get autoclean
sudo apt-get upgrade
ranger
w3m
if command -v curl >/dev/null 2>&1; then\
    bash -c "$(curl -fsSL https://raw.githubusercontent.com/ayamir/nvimdots/HEAD/scripts/install.sh)"\
else\
    bash -c "$(wget -O- https://raw.githubusercontent.com/ayamir/nvimdots/HEAD/scripts/install.sh)"\
fi
sudo apt install neovim
sudo apt upgrade
nvim -v
htop
sudo apt install golang
env CGO_ENABLED=0 go install -ldflags="-s -w" github.com/gokcehan/lf
go install github.com/gokcehan/lf@latest
go install -ldflags="-s -w" github.com/gokcehan/lf
sudo apt purge golang
rm -rf ~/go
sudo rm -rf ~/go
curl -L https://github.com/gokcehan/lf/releases/latest/download/lf-linux-amd64.tar.gz | tar xzC ~/.local/bin
sudo apt install tar
sudo apt autoremove
curl -L https://github.com/gokcehan/lf/releases/latest/download/lf-linux-amd64.tar.gz | tar xzC ~/.local/bin
curl -L https://github.com/gokcehan/lf/releases/latest/download/lf-linux-amd64.tar.gz | tar xzC ~/.local/bin
dot
v setup-scripts/mint.sh
ga setup-scripts/mint.sh
git commit -S -m "updated"
gp
sudo apt install w3m
xterm -e ranger
ranger
sudo apt install xviewer
ranger
pkill picom
sudo apt purge xviewer
sudo apt autoremove
sudo apt autoclean
ranger
xterm -e ranger
git clone https://github.com/dimsp98/st.git
cd st
sudo make clean install
st -e ranger
w3mimgpreview 
cd
w3m --help
killall picom 
picom -b
picom -b
killall picom 
bspc node --kill
bspc node --kill
bspc node --kill
bspc wm -d
bspc node --kill
neofetch
neofetch
dot
v setup-scripts/mint.sh
v setup-scripts/mint.sh
git add setup-scripts/mint.sh
git commit -S -m "updated"
gp
killall picom
sudo apt purge picom
killall picom
sudo apt install libconfig-dev libdbus-1-dev libegl-dev libev-dev libgl-dev libepoxy-dev libpcre2-dev libpixman-1-dev libx11-xcb-dev libxcb1-dev libxcb-composite0-dev libxcb-damage0-dev libxcb-dpms0-dev libxcb-glx0-dev libxcb-image0-dev libxcb-present-dev libxcb-randr0-dev libxcb-render0-dev libxcb-render-util0-dev libxcb-shape0-dev libxcb-util-dev libxcb-xfixes0-dev libxext-dev meson ninja-build uthash-dev
sudo apt install asciidoc
git clone https://github.com/ibhagwan/picom.git
cd picom
ls
meson setup --buildtype=release build\
ninja -C build
ninja -C build install
cd build
ninja -C build install
ninja -C build
cd
cd picom
ls
sudo apt purge --autoremove asciidoc
sudo apt purge --autoremove libconfig-dev libdbus-1-dev libegl-dev libev-dev libgl-dev libepoxy-dev libpcre2-dev libpixman-1-dev libx11-xcb-dev libxcb1-dev libxcb-composite0-dev libxcb-damage0-dev libxcb-dpms0-dev libxcb-glx0-dev libxcb-image0-dev libxcb-present-dev libxcb-randr0-dev libxcb-render0-dev libxcb-render-util0-dev libxcb-shape0-dev libxcb-util-dev libxcb-xfixes0-dev libxext-dev meson ninja-build uthash-dev
make
cd
rm -rf picom
ls
neofetch
sudo apt install asciidoc libconfig-dev libdbus-1-dev libegl-dev libev-dev libgl-dev libepoxy-dev libpcre2-dev libpixman-1-dev libx11-xcb-dev libxcb1-dev libxcb-composite0-dev libxcb-damage0-dev libxcb-dpms0-dev libxcb-glx0-dev libxcb-image0-dev libxcb-present-dev libxcb-randr0-dev libxcb-render0-dev libxcb-render-util0-dev libxcb-shape0-dev libxcb-util-dev libxcb-xfixes0-dev libxext-dev meson ninja-build uthash-dev
git clone https://github.com/ibhagwan/picom.git
cd picom
meson setup --buildtype=release build
sudo apt install xcb-xinerama
ninja -C build
ls
ninja build
mkdir build.ninja
ninja -C build
rm -rf build.ninja
cd build
ls
cd src
ls
./
../
../
ls
meson setup --buildtype=release build
sudo apt install pkgconfig
sudo apt install cmake
meson setup --buildtype=release build
cd build
meson setup --buildtype=release build
ls
../
meson setup --buildtype=release build
sudo apt install libxcb-xinerama0-dev
meson setup --buildtype=release build
sudo apt install libpcre
sudo apt install libpcre2-dev
meson setup --buildtype=release build
sudo apt install libpcre3-dev
meson setup --buildtype=release build
ninja -C build
ninja -C build install
meson install 
sudo ninja -C build install
killall picom
polybar
sudo apt install libxcb-xrm
sudo apt install build-essential git cmake cmake-data pkg-config python3-sphinx python3-packaging libuv1-dev libcairo2-dev libxcb1-dev libxcb-util0-dev libxcb-randr0-dev libxcb-composite0-dev python3-xcbgen xcb-proto libxcb-image0-dev libxcb-ewmh-dev libxcb-icccm4-dev
sudo apt install libxcb-xkb-dev libxcb-xrm-dev libxcb-cursor-dev libasound2-dev libpulse-dev i3-wm libjsoncpp-dev libmpdclient-dev libcurl4-openssl-dev libnl-genl-3-dev
killall picom
v .config/bspwm/autostart.sh
dot
v setup-scripts/mint.sh
ga setup-scripts/mint.sh
git commit -S -m "updated"
gp
polybar
v .config/i3/config
v .config/bspwm/sxhkdrc
v .config/i3/config
mpd
ncmpcpp
neofetch
sudo apt install picom
sudo apt purge --autoremove asciidoc libconfig-dev libdbus-1-dev libegl-dev libev-dev libgl-dev libepoxy-dev libpcre2-dev libpixman-1-dev libx11-xcb-dev libxcb1-dev libxcb-composite0-dev libxcb-damage0-dev libxcb-dpms0-dev libxcb-glx0-dev libxcb-image0-dev libxcb-present-dev libxcb-randr0-dev libxcb-render0-dev libxcb-render-util0-dev libxcb-shape0-dev libxcb-util-dev libxcb-xfixes0-dev libxext-dev meson ninja-build uthash-dev
sudo systemctl status casper-md5check.service
sudo apt install casper
sudo apt purge --autoremove casper -y
picom -b
v .config/bspwm/autostart.sh
xprop -root
 bspc wm --adopt-orphans 
sudo apt-get autoclean
sudo apt purge --autoremove w3m -y
sudo apt install --help
sudo apt install w3m
cd st
sudo make uninstall
cd
rm -rf st
ls
cd st
v .config/bspwm/autostart.sh
dot
ga config/bspwm/autostart.sh
git commit -S -m "updated"
gp
 bspc wm --adopt-orphans 
htop
dot
cd setup-scripts
./dwm.sh
sudo apt install libx11-dev
sudo apt install libxft-dev
sudo apt install libxine2-dev
./dwm.sh
sudo apt install libxinerama-dev
sudo apt purge libxine2-dev:amd64
./dwm.sh
htop
lf
cd .dwm
v config.def.h.
v config.def.h
ls
cp config.h config.def.h
sudo make clean install
v config.def.h
cd .dwm
v config.h
cd .dwm
v config.def.h
sudo make clean install
v config.def.h
sudo make clean install
v config.def.h
sudo make clean install
ls
cd patches
ls
v dwm-exitmenu-6.3.diff
../
sudo make clean install
sudo apt install pamixer
sudo apt install pulsemixer
sudo apt purge alsa-tools
git clone https://github.com/dimsp98/dmenu.git && cd dmwnu && sudo make clean install
git clone https://github.com/dimsp98/dmenu.git && cd dmenu && sudo make clean install
cd dmenu && sudo make clean install
git status
dot
v setup-scripts/dwm.sh
ga setup-scripts/dwm.sh
git commit -S -m "updated"
gp
sudo apt install alsa-tools
git status
cd
cd slstatus
v volume.sh
cd .dwm
ls
v exitdwm.c
rm -rf config.def.h
sudo make clean install
ga .
git commit -S -m "updated"
gp
git config --global user.email "dspiliotis98@gmail.com"\
git config --global user.name "dimsp98"\
git config commit.gpgsign true
git remote set-url origin git@github.com:dimsp98/dwm.git
git config --global gpg.format ssh\
git config --global user.signingkey ~/.ssh/id_rsa.pub\
git push git@github.com:dimsp98/dwm.git
gp
cd
cd slstatus
ls
v slstatus
v config.h
sudo apt install pavucontrol
sudo apt autoremove
xprop
cd slstatus
git status
v components/volume.
v components/volume.o
v components/volume.c
v config.mk
v config.h
rm -rf config.def.h
cp config.h config.def.h
sudo make clean install
v config.h
rm -rf config.def.h
cp config.h config.def.h
sudo make clean install
ga .
git commit -S -m "updated"
git remote set-url origin git@github.com:dimsp98/slstatus.git
gp
pulsemixer --get-volume
cd slstatus
v config.def.h
v volume.sh
ga volume.sh
git commit -S -m "updated"
gp
pkill slstatus
sudo make clean install
cd slstatus
v config.h
rm -rf config.def.h
cp config.h config.def.h
sudo make clean install
ga config.h config.def.h
git status
ga slstatus slstatus.o
git commit -S -m "updated"
gp
pkill slstatus
v volume.sh
pkill slstatus
sudo make clean install
pkill slstatus
v volume.sh
sudo make clean install
pkill slstatus
v volume.sh
sudo make clean install
pkill slstatus
v volume.sh
sudo make clean install
pkill slstatus
pkill slstatus
v volume.sh
v config.h
sudo make clean install
v volume.sh
sudo make clean install
pkill slstatus
v config.h
sudo make clean install
pkill slstatus
v config.h
sudo make clean install
pkill slstatus
v config.h
pkill slstatus
sudo make clean install
v config.h
v volume.sh
sudo make clean install
pkill slstatus
v config.h
pkill slstatus
sudo make clean install
v volume.sh
pkill slstatus
v config.h
sudo make clean install
v config.h
pkill slstatus
sudo make clean install
dot
cd
cd slstatus
v config.h
v volume.sh
sudo make clean install
killall slstatus
v volume.sh
sudo make clean install
killall slstatus
v volume.sh
v config.h
v config.def.h
sudo make clean install
killall slstatus
v config.def.h
rm -rf config.h
v config.def.h
sudo make clean install
killall slstatus
v config.def.h
sudo make clean install
killall slstatus
v config.def.h
sudo make clean install
killall slstatus
v volume.sh
killall slstatus
sudo make clean install
v config.def.h
sudo make clean install
killall slstatus
v config.def.h
killall slstatus
sudo make clean install
v config.def.h
sudo make clean install
killall slstatus
v volume.sh
sudo make clean install
killall slstatus
v volume.sh
sudo -e volume.shOA
v volume.sh
sudo make clean install
killall slstatus
v volume.sh
sudo make clean install
killall slstatus
v volume.sh
sudo make clean install
killall slstatus
v volume.sh
sudo make clean install
killall slstatus
v volume.sh
sudo make clean install && killall slstatus
v config.def.h
sudo make clean install && killall slstatus
v config.def.h
sudo make clean install && killall slstatus
v config.def.h
sudo make clean install && killall slstatus
v volume.sh
killall slstatus
sudo make clean install && killall slstatus
v config.def.h
sudo make clean install && killall slstatus
v config.def.h
sudo make clean install && killall slstatus
v config.def.h
sudo make clean install && killall slstatus
./volume.sh
pulsemixer --get-volume-human
v volume.sh
./volume.sh
v volume.sh
./volume.sh
v volume.sh
./volume.sh
v volume.sh
./volume.sh
sudo make clean install
pulsemixer --get-volume
alsamixer --get-volume
alsamixer
pulsemixer --help
pulsemixer --get-volume
pulsemixer
v volume.sh
./volume.sh
v volume.sh
./volume.sh
v volume.sh
./volume.sh
v volume.sh
./volume.sh
sudo make clean install
sudo make clean install && killall slstatus
v config.def.h
sudo make clean install && killall slstatus
v config.def.h
v volume.sh
sudo make clean install && killall slstatus
v volume.sh
sudo make clean install && killall slstatus
v volume.sh
sudo make clean install && killall slstatus
v volume.sh
sudo make clean install && killall slstatus
v volume.sh
sudo make clean install && killall slstatus
rm -rf config.h
sudo make clean install && killall slstatus
v config.def.h
rm -rf config.h
sudo make clean install && killall slstatus
./volume.sh
./volume.sh
pactl --help
pactl info
cd .config/herbstluftwm
ls
v bar.ini
cp -r bar.ini ~/.config/i3
cd 
.config/i3
v bar.ini
v bar.ini
../
cd polybar
v modules.ini
v modules.ini
../
cd i3
v config
../
v sxhkd/sxhkdrc
v bspwm/autostart.sh
v .dwm/autostart.sh
v .config/herbstluftwm/panel.sh
.config
v bspwm/bspwmrc
v bspwm/autostart.sh
cd .config/i3
ls
v config
v config
cd .config/i3
touch colors.conf
v colors.conf
v colors.conf
../
v bspwm/autostart.sh
v bspwm/bspwmrc
v .config/i3/config
polybar -c ~/.config/i3/bar.ini
v .config/i3/bar.ini
v .config/herbstluftwm/panel.sh
v .config/herbstluftwm/bar.ini
sudo apt install i3-gaps
dot 
ga config/herbstluftwm/
git status
ga config/polybar/modules.ini
cp ~/.config/i3 ~/dotfiles
cp -r ~/.config/i3 ~/dotfiles
ls
mv i3 config
ga config/i3/
git commit -S -m "updated"
gp
rm -rf ~/.config/i3 && ln -sf ~/dotfiles/config/i3 ~/.config/
cp config/herbstluftwm/panel.sh config/i3
v config/i3/config
v config/i3/panel.sh
v config/i3/config
v config/i3/config
picom -b -c ~/.config/picom/picom.conf
picom -b
v .config/i3/colors.conf
v .config/bspwm/autostart.sh
v .config/i3/config
v .config/i3/config
v .config/i3/config
dot
git status
ga config/i3/
git commit -S -m "updated"
gp
v .config/i3/config
v config/i3/config
v config/i3/config
sudo apt upgrade
git status
ga config/i3/config
git commit -S -m "updated"
gp
v .config/dunst/dunstrc
v .config/dunst/dunstrc
v .config/dunst/dunstrc
dot
ga config/dunst/dunstrc
git commit -S -m "updated"
gp
bspc query -M --names
bspwm --help
bspwm -v
i3-wm -v
i3 -v
neofetch
v .config/i3/config
xprop
git clone https://github.com/ueber-devel/ueberzug.git
htop
htop
htop
neofetch
neofetch
sudo apt install kitty
kitty -e ranger
kitty
v .config/kitty
cd .config/kitty
ls
which kitty.conf
find kitty.conf
kitty --config
v /usr/share/doc/kitty/examples/kitty.conf
cp -r /usr/share/doc/kitty/examples/kitty.conf ~/.config/kitty
ls
v kitty.conf
neofetch
